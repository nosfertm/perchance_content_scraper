name: Process Scraped Characters

on:
  schedule:
    - cron: "0 12 * * *"  # Runs daily at 12:00 UTC
  workflow_dispatch:  # Allows manual execution
  workflow_call:  # Allows being triggered by another workflow

jobs:
  run-script:
    runs-on: ubuntu-latest
    
    # Adds concurrency to prevent simultaneous runs
    concurrency:
      group: processing-scraped
      cancel-in-progress: false    # Prevents new jobs from starting while current one is running

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: perchance_comments
          token: ${{ secrets.PAT_GITHUB_ACTIONS }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version to use

      - name: Install dependencies manually
        run: |
          npm install @google/generative-ai

      - name: Set environment variables
        env:
          GEMINI_TOKEN: ${{ secrets.GEMINI_TOKEN }}
          PIGIMAGE_TOKEN: ${{ secrets.PIGIMAGE_TOKEN }}
          FREEIMAGE_TOKEN: ${{ secrets.FREEIMAGE_TOKEN }}
        run: echo "Environment variables set"

      - name: Run script
        env:
          GEMINI_TOKEN: ${{ secrets.GEMINI_TOKEN }}
          PIGIMAGE_TOKEN: ${{ secrets.PIGIMAGE_TOKEN }}
          FREEIMAGE_TOKEN: ${{ secrets.FREEIMAGE_TOKEN }}
        run: node .github/scripts/process_scraped_characters.js  # Adjust the script name as needed

      - name: Remove node_modules and package-lock.json
        run: |
          rm -rf node_modules  # Remove node_modules folder
          rm -f package-lock.json  # Remove file
          rm -f package.json

      - name: Commit and push changes to the working branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update generated files" && git push)
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_ACTIONS }}

      - name: Remove unwanted files from the machine to create PR
        run: |
          rm -rf characters
          rm -rf ai-character-char
          rm -rf ai-character-chat/characters/scrape

      - name: Debug - List remaining files before creating the new branch
        run: ls -R

      # First, save the files we want to keep in a temporary location
      - name: Save processed files to temporary location
        run: |
          # Create a temporary directory to store our processed files
          mkdir -p /tmp/processed_files
          # Copy all files we want to keep to the temporary directory
          cp -r ai-character-chat /tmp/processed_files/

      # Now create and switch to the new branch
      - name: Create and checkout new branch from main
        run: |
          # Fetch and checkout main branch
          git fetch origin main:main
          # Create and checkout new branch
          git checkout -b processed-batch1 main

      # Restore our saved files
      - name: Restore processed files
        run: |
          # Copy the files back from temporary location
          cp -r /tmp/processed_files/ai-character-chat ./
          # Remove temporary directory
          rm -rf /tmp/processed_files

      - name: Debug - List restored files
        run: ls -R

      - name: Commit and push changes to the new branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update processed files" && git push origin processed-batch1)
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_ACTIONS }}

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.PAT_GITHUB_ACTIONS }}
        run: |
          if git diff --quiet origin/main origin/processed-batch1; then
            echo "No differences found between branches. Skipping PR creation."
          else
            gh pr create \
              --base main \
              --head processed-batch1 \
              --title "Automated PR - Updated generated files" \
              --body "This PR contains automatically generated updates." \
              --label "automated-pr"
          fi
